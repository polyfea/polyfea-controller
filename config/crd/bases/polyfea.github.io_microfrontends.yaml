---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: microfrontends.polyfea.github.io
spec:
  group: polyfea.github.io
  names:
    kind: MicroFrontend
    listKind: MicroFrontendList
    plural: microfrontends
    singular: microfrontend
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MicroFrontend is the Schema for the microfrontends API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MicroFrontendSpec defines the desired state of MicroFrontend
            properties:
              cacheControl:
                description: 'TODO: Make this work CacheControl defines the cache
                  control header for the micro frontend. This is only used if the
                  caching strategy is set to ''cache''.'
                type: string
              cacheOptions:
                description: CacheOptions specifies the cache settings for the PWA,
                  including pre-caching and runtime caching.
                properties:
                  cacheRoutes:
                    description: CacheRoutes specifies the caching strategies for
                      different URL patterns.
                    items:
                      description: CacheRoute defines the caching strategy for a specific
                        URL pattern within a Progressive Web Application (PWA). This
                        struct allows for fine-tuned control over how different network
                        requests are handled, enhancing performance, reliability,
                        and offline capabilities based on the application's requirements.
                      properties:
                        destination:
                          description: 'Destination is the optional destination URL
                            for this caching strategy. You can find the list of possible
                            values here: https://developer.mozilla.org/en-US/docs/Web/API/Request/destination'
                          type: string
                        maxAgeSeconds:
                          description: MaxAgeSeconds specifies the maximum age (in
                            seconds) for cached content.
                          format: int32
                          type: integer
                        method:
                          default: GET
                          description: Method specifies the HTTP method to be used
                            with this caching strategy. It defaults to "GET".
                          enum:
                          - DELETE
                          - GET
                          - HEAD
                          - PATCH
                          - POST
                          - PUT
                          type: string
                        pattern:
                          description: Pattern is the URL pattern to which this caching
                            strategy applies.
                          type: string
                        statuses:
                          default:
                          - 0
                          - 200
                          - 201
                          - 202
                          - 204
                          description: Statuses lists the HTTP status codes to be
                            cached. It defaults to [0, 200, 201, 202, 204].
                          items:
                            format: int32
                            type: integer
                          type: array
                        strategy:
                          default: cache-first
                          description: Strategy defines the caching strategy to be
                            used for this URL pattern. It defaults to "cache-first".
                          enum:
                          - cache-first
                          - network-first
                          - cache-only
                          - network-only
                          - stale-while-revalidate
                          type: string
                        syncRetentionMinutes:
                          description: SyncRetentionMinutes specifies the duration
                            (in minutes) to retain synced content in the cache.
                          format: int32
                          type: integer
                      required:
                      - pattern
                      type: object
                    type: array
                  preCache:
                    description: PreCache lists the URLs or resources to be pre-cached
                      when the PWA is installed.
                    items:
                      description: PreCacheEntry represents an individual entry in
                        the pre-cache list for a Progressive Web Application (PWA).
                        Each entry specifies a URL to be cached and an optional revision
                        identifier to manage cache updates and invalidation.
                      properties:
                        revision:
                          description: Revision is an optional field that specifies
                            a revision identifier for the resource. The revision helps
                            in cache management by allowing the service worker to
                            recognize and update cached assets when their content
                            changes. This ensures users always have access to the
                            most up-to-date resources.
                          type: string
                        url:
                          description: URL specifies the resource URL that should
                            be pre-cached. This URL points to the asset that needs
                            to be available offline, ensuring it is cached during
                            the installation of the PWA.
                          type: string
                      required:
                      - url
                      type: object
                    type: array
                type: object
              cacheStrategy:
                default: none
                description: 'TODO: Make this work CachingStrategy defines the caching
                  strategy for the micro frontend.'
                enum:
                - none
                - cache
                type: string
              dependsOn:
                description: List of dependencies that should be loaded before this
                  micro frontend.
                items:
                  type: string
                type: array
              frontendClass:
                default: polyfea-controller-default
                description: FrontendClass is the name of the frontend class that
                  should be used for this micro frontend.
                type: string
              modulePath:
                description: Relative path to the module file within the service.
                type: string
              proxy:
                default: true
                description: This specifies whether the loading of web components
                  should be proxied by the controller.
                type: boolean
              service:
                description: Reference to a service from which the modules or css
                  would be served. Fully qualified name of the service should be specified
                  in the format <schema>://<service-name>.<namespace>.<cluster>.
                type: string
              staticPaths:
                description: Relative path to the static files within the service.
                items:
                  description: StaticResources defines the static resources that should
                    be loaded before this micro frontend.
                  properties:
                    attributes:
                      items:
                        description: Attribute defines a key-value pair that allows
                          you to assign specific attributes to the element. The name
                          field is used as the attribute name, while the value field
                          can be any valid JSON type.
                        properties:
                          name:
                            description: The name of the attribute.
                            type: string
                          value:
                            description: The value of the attribute.
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    kind:
                      description: Kind defines the kind of the static resource can
                        be script, stylesheet, or any other `link` element.
                      type: string
                    path:
                      type: string
                    proxy:
                      default: true
                      description: This specifies whether the loading of static resource
                        components should be proxied by the controller.
                      type: boolean
                    waitOnLoad:
                      description: WaitOnLoad defines whether the micro frontend should
                        wait for the static resource to load before loading itself.
                      type: boolean
                  required:
                  - kind
                  - path
                  type: object
                type: array
            required:
            - frontendClass
            - modulePath
            - service
            type: object
          status:
            description: MicroFrontendStatus defines the observed state of MicroFrontend
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
