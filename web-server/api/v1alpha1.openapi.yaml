openapi: 3.0.3
info:
  title: Polyfea Browser application
  description: |
    This is the OpenAPI definition for the Polyfea endpoint serving the context information
    to the browser client. The client is requesting context information from the backend typically 
    when approaching the `<polyfea-context>` element. The context information is then used to
    render the UI of the application.
  version: v1alpha1
servers:
  - url: ./polyfea
    description: |
      The server typicaly listens on the same endpoint, relative to the base URL.
      The actual endpoint may be overridden by setting the `meta` property `polyfea-backend`.
tags:
  - name: polyfea
    description: API tag
paths:
  /context-area/{name}:
    get:
      tags:
        - polyfea
      summary: |
        Get the context area information.
      description: |
        Get the context area information. Context area information includes elements and microfrontneds needed
        for that elements. Actual content is depending on the path - provided as an input  and the user 
        role determined on the server side.
      operationId: getContextArea
      parameters:
        - name: name
          in: path
          description: |
            The name of the context area for which we request specification of elements to add
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: |
            The path - relative to base href - at which the context area shall be displayed.
          required: true
          schema:
            type: string
        - name: take
          in: query
          description: |
            Number of elements to be consumed by client. The elements are consumed in the order they are provided. If not specified then ň
            all provided elements will be used.
          required: false
          schema:
            type: number
      responses:
        "200":
          description: |
            The context area information for the current user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContextArea"
              examples:
                toplevel-tiles:
                  $ref: "#/components/examples/context-area-toplevel-tiles"

        "401":
          description: |
            The user is not authenticated.
        "403":
          description: |
            The user is authenticated but not authorized to access the context area information.
        "404":
          description: |
            The context area information is not found.
        "500":
          description: |
            The server encountered an unexpected error.
  /static-config:
    get:
      tags:
        - polyfea
      summary: |
        Get the static information about all resources and context areas.
      description: |
        Get the static configuration of the application context areas. Holds a sum of all
        microfrontends and web components. Can be beneficial if logic of the frontend is simple and static, and in cases
        such as development or testing.
      operationId: getStaticConfig
      responses:
        "200":
          description: |
            The static configuration of application.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StaticConfig"
              examples:
                simple-configuration:
                  $ref: "#/components/examples/static-config-simple-configuration"
        "404":
          description: |
            The static resource is not found.
        "500":
          description: |
            The server encountered an unexpected error.

components:
  schemas:
    ContextArea:
      type: object
      description: |
        Elements to be inserted into the microfrontend context area.
        The context area describes an area in the document flow which content is depending on the configuration of the system. For examples
        the context area `top-level-applicartion` may be used to render the top level application tiles.
      required: [elements]
      properties:
        elements:
          type: array
          items:
            $ref: "#/components/schemas/ElementSpec"
          description: |
            The elements to be inserted into the context area. The elements are rendered in the order they are provided in the array.
        microfrontends:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MicrofrontendSpec"
          description: |
            The microfrontends referenced by any of the elements. Loading of microfrontend resources is triggered by the browser when the
            element is rendered.

    StaticConfig:
      type: object
      description: |
        Specification of the static configuration of the application.
        The static configuration is a compilation of all contexts/paths and their elements, 
        usefull durring development, testing or for simpler applications.
      required: [contexts, microfrontends]
      properties:
        contextAreas:
          description: |
            List of context areas and their elements. The context areas are referenced by the name and path regex
            at which they are rendered. In case of conflict, the first matching context area is used.
          type: array
          items:
            $ref: "#/components/schemas/StaticConfigArea"
        microfrontends:
          description: |
            Dictionary of microfrontends. The microfrontends are referenced by their name.
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MicrofrontendSpec"

    StaticConfigArea:
      type: object
      description: |
        Specification of the static configuration of the context area with specific name and path regex.
      required: [name]
      properties:
        name:
          type: string
          description: |
            Name of the context area.
        path:
          type: string
          description: |
            The regular expression to match the path relative to base href to apply this context area. 
            If path is not provided then context area specification applies on any path. In case of the conflicts
            the first matching context area is used.
        contextArea: 
          $ref: "#/components/schemas/ContextArea"
          description: |
            Definition of context area elements. The context area's property `microfrontends` shall be empty, but if provided
            then it overrides the definition in the `StaticConfig.microfrontends` properties.
    ElementSpec:
      type: object
      description: |
        Specification of the element
        Elements are the building blocks of the application. Each element shall be a web component that is
        rendered by the browser. When rendered in context - using e.g. `polyfea-context` element, the element 
        attribute ˙context` is set to the context area's name.
      required: [tagName]
      properties:
        microfrontend:
          type: string
          description: |
            The name of the microfrontend that the element belongs to. The microfrontend is loaded by the browser
            before the element is rendered. If not provided, then it is assumed that all resources needed by the
            element are already loaded by the browser before the element is rendered.
        tagName:
          type: string
          description: |
            The name of the element - its tag name to be put into document flow.
        attributes:
          type: object
          additionalProperties:
            type: string
          description: |
            Attributes of the element to be set when the element is rendered.
        style:
          type: object
          additionalProperties:
            type: string
          description: |
            The styles of the element. Intended primary as a fallback for specific 
            cases, e.g. setting CSS variables.

    MicrofrontendSpec:
      type: object
      description: |
        Specification of the microfrontend
        Microfrontend resources are loaded by browser on demand. Each microfrontend consist of a set
        of resources to be loaded ahead of rendering or parallel to the rendering of microfrontend elements.
        In addition, the microfrontend can depend on other microfrontends.

      properties:
        dependsOn:
          type: array
          items:
            type: string
          description: |
            The microfrontend that this microfrontend is depending on. Specification of the dependendencies
            is provided in the context  area information.
        module:
          type: string
          description:
            Shorthand for the microfrontend script module resource. The module is loaded by the browser
            before rendering of elements happens. In case the module has dependencies to other resources, they
            may be loaded by the module itself, assuming their references are provided as a relative path to the
            module.
        resources:
          type: array
          items:
            type: MicrofrontendResource
          description: |
            The resources to be loaded by the browser. Only resources that needs to be directly loaded in the 
            document `head` element needs to be specified here, typical examples are fonts, and stylesheets that 
            are required to be globally available.

    MicrofrontendResource:
      type: object
      description: |
        The resource required by the microfrontend.
        The resource is either a script, stylesheet, or any other `link` element. The resource is 
        loaded by the browser when the microfrontend is requested to be loaded. The resource may be loaded
        either synchronously or asynchronously.
      properties:
        kind:
          type: string
          enum: [script, stylesheet, link]
          description: |
            The kind of the resource. The resource is either a script, stylesheet, or any other `link` element.
        href:
          type: string
          description: |
            The URL of the resource. The URL is typically relative to the base URL of the application and typically
            served as subpath of `<base_href>/polyfea/webcomponent/<microfrontend-name>/<resource-path...>`.
        attributes:
          type: object
          additionalProperties:
            type: string
          description: |
            The attributes to be put on the `link` or `script` element in addition to `rel` and `href` attributes.
        waitOnLoad:
          type: boolean
          description: |
            If `true` the browser will wait for the resource to be loaded before finishing loading of the microfrontend.
            If `false` the browser will load the resource asynchronously and continue with loading and rendering in 
            between.
  examples:
    context-area-toplevel-tiles:
      summary: |
        Example of a context area information for the top level application tiles.
      value:
        elements:
          - microfrontend: polyfea-md-shell
            tagName: polyfea-md-app
            attributes:
              headline: My sample application
              shortHeadline: sample
              supportingText: |
                This is a sample application to be shown in various contexts on the page navigation elements
              materialIcon: token
              tileImgSrc: /my-assets/sample-app-tile.svg
              href: ./sample-app
          - microfrontend: my-sample-fea
            tagName: my-dynamic-tile
            attributes:
              refreshInterval: 10000
              href: ./other-sample-app
        microfrontends:
          material-design:
            resources:
              - kind: stylesheet
                href: ./polyfea/webcomponent/material-design/theme.css
                waitOnLoad: false
              - kind: script
                href: ./polyfea/webcomponent/material-design/all.esm.js
                attributes:
                  type: module
                waitOnLoad: true
              - kind: link
                href: ./polyfea/webcomponent/material-design-elements/material-symbols.css
                attributes:
                  rel: stylesheet
                waitOnLoad: false
          polyfea-md-shell:
            dependsOn: [material-design]
            module: ./polyfea/webcomponent/polyfea-md-shell/polyfea-md-shell.esm.js
          my-sample-fea:
            dependsOn: [material-design]
            module: ./polyfea/webcomponent/my-sample-fea/my-sample-fea.esm.js
    static-config-simple-configuration:
      summary: |
        Example of a simple static configuration.
      value:
        contexts:
          - name: shell
            elements:
              - microfrontend: polyfea-md-shell
                tagName: polyfea-md-shell
                attributes:
                  headline: My sample application

          - name: main-content
            path: ^/$
            elements:
              - microfrontend: polyfea-md-shell
                tagName: polyfea-md-apps
                attributes:
                  applicationsContext: applications

          - name: main-content
            path: ^/sample-app
            elements:
              - microfrontend: my-sample-fea
                tagName: sample-data

          - name: applications
            elements:
              - microfrontend: polyfea-md-shell
                tagName: polyfea-md-app
                attributes:
                  headline: My sample application
                  shortHeadline: sample
                  supportingText: |
                    This is a sample application to be shown in various contexts on the page navigation elements
                  materialIcon: token
                  tileImgSrc: /my-assets/sample-app-tile.svg
                  href: ./sample-app
              - microfrontend: my-sample-fea
                tagName: my-dynamic-tile
                attributes:
                  refreshInterval: 10000
                  href: ./other-sample-app

        microfrontends:
          material-design:
            resources:
              - kind: stylesheet
                href: ./polyfea/webcomponent/material-design/theme.css
                waitOnLoad: false
              - kind: script
                href: ./polyfea/webcomponent/material-design/all.esm.js
                attributes:
                  type: module
                waitOnLoad: true
              - kind: link
                href: ./polyfea/webcomponent/material-design-elements/material-symbols.css
                attributes:
                  rel: stylesheet
                waitOnLoad: false
          polyfea-md-shell:
            dependsOn: [material-design]
            module: ./polyfea/webcomponent/polyfea-md-shell/polyfea-md-shell.esm.js
          my-sample-fea:
            dependsOn: [material-design]
            module: ./polyfea/webcomponent/my-sample-fea/my-sample-fea.esm.js
    element-spec-application-tile:
      summary: |
        Example of an application tile element specification.
      value:
        microfrontend: polyfea-md-shell
        tagName: polyfea-md-app
        attributes:
          headline: My sample application
          shortHeadline: sample
          supportingText: |
            This is a sample application to be shown in various contexts on the page navigation elements
          materialIcon: token
          tileImgSrc: /my-assets/sample-app-tile.svg
          href: ./sample-app
    element-spec-custom-element:
      summary: |
        Example of a custom element specification.
      value:
        microfrontend: my-sample-fea
        tagName: my-custom-element
        attributes:
          my-attribute: my-value
          my-other-attribute: my-other-value
        style:
          --my-custom-variable: my-custom-value
    microfrontend-spec-material-md-shell:
      summary: |
        Example of a material design shell microfrontend specification.
      value:
        dependsOn: [material-design]
        module: ./polyfea/webcomponent/polyfea-md-shell/polyfea-md-shell.esm.js
    microfrontend-spec-material-design-resources:
      summary: |
        Example of a microfrontend to load resources needed for material design web elements.
      value:
        resources:
          - kind: stylesheet
            href: ./polyfea/webcomponent/material-design/theme.css
            waitOnLoad: false
          - kind: script
            href: ./polyfea/webcomponent/material-design/all.esm.js
            attributes:
              type: module
            waitOnLoad: true
          - kind: link
            href: ./polyfea/webcomponent/material-design-elements/material-symbols.css
            attributes:
              rel: stylesheet
            waitOnLoad: false
    microfrontend-resource-theme-resource:
      summary: |
        Example of a stylesheet resource.
      value:
        kind: stylesheet
        href: ./polyfea/webcomponent/polyfea-md-shell/theme.css
        waitOnLoad: false
    microfrontend-resource-script-resource:
      summary: |
        Example of a script resource.
      value:
        kind: script
        href: ./polyfea/webcomponent/material-design-elements/all.esm.js
        attributes:
          type: module
        waitOnLoad: true
    microfrontend-resource-font-resource:
      summary: |
        Example of a font resource.
      value:
        kind: link
        href: ./polyfea/webcomponent/material-design-elements/material-icons.css
        attributes:
          rel: stylesheet
        waitOnLoad: false
