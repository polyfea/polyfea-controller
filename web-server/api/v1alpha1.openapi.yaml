openapi: 3.0.3
info:
  title: Polyfea Browser application
  description: |
    This is the OpenAPI definition for the Polyfea endpoint, which serves context information to the 
    browser client. The client typically requests this context information from the backend when it 
    encounters the `<polyfea-context>` element. This context information is then used to render the 
    application's UI.
  version: v1alpha1
servers:
  - url: ./polyfea
    description: |
      Typically, the server listens on the same endpoint relative to the base URL. 
      However, you can override the actual endpoint by setting the `polyfea-backend` 
      value in the `meta` property.
tags:
  - name: polyfea
    description: API tag
paths:
  /context-area/{name}:
    get:
      tags:
        - polyfea
      summary: |
        Get the context area information.
      description: |
        Retrieve the context area information. This information includes the elements and 
        microfrontends required for these elements. The actual content depends on the input path and 
        the user role, which is determined server-side.
      operationId: getContextArea
      parameters:
        - name: name
          in: path
          description: |
            The name of the context area for which element specifications are requested.
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: |
            The relative path from the base href where the context area should be displayed.
          required: true
          schema:
            type: string
        - name: take
          in: query
          description: |
            The number of elements the client should consume. Elements are consumed in 
            the order they are provided. If not specified, all provided elements will be used.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: |
            The context area information specific to the current user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContextArea"
              examples:
                toplevel-tiles:
                  $ref: "#/components/examples/context-area-toplevel-tiles"

        "401":
          description: |
            The user is not authenticated.
        "403":
          description: |
            The user is authenticated but not authorized to access the context area information.
        "404":
          description: |
            The context area information is not found.
        "500":
          description: |
            The server encountered an unexpected error.
  /static-config:
    get:
      tags:
        - polyfea
      summary: |
        Get the static information about all resources and context areas.
      description: |
        Retrieve the static configuration of the application's context areas. 
        This includes a combination of all microfrontends and web components. 
        This approach is advantageous when the frontend logic is simple and static, 
        particularly during development or testing phases.
      operationId: getStaticConfig
      responses:
        "200":
          description: |
            The static configuration of application.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StaticConfig"
              examples:
                simple-configuration:
                  $ref: "#/components/examples/static-config-simple-configuration"
        "404":
          description: |
            The static resource is not found.
        "500":
          description: |
            The server encountered an unexpected error.

components:
  schemas:
    ContextArea:
      type: object
      description: |
        Elements to be inserted into the microfrontend context area. 
        The context area refers to a section in the document flow, the content of which depends 
        on the system's configuration. For instance, the context area `top-level-application` 
        could be used to render the top-level application tiles.
      required: [elements]
      properties:
        elements:
          type: array
          items:
            $ref: "#/components/schemas/ElementSpec"
          description: |
            The elements to be incorporated into the context area. 
            These elements will be rendered in the sequence they appear in the array.
        microfrontends:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MicrofrontendSpec"
          description: |
            The microfrontends referenced by any of the elements. The browser triggers
            the loading of microfrontend resources when the element is rendered.

    StaticConfig:
      type: object
      description: |
        Specification of the application's static configuration. 
        This configuration is a compilation of all contexts/paths and their elements. 
        It's particularly useful during development, testing, or for simpler applications. 
      required: [contexts, microfrontends]
      properties:
        contextAreas:
          description: |
            A list of context areas along with their elements. Each context area is identified by its 
            name and the regex path where it's rendered. In the event of a conflict, the first matching 
            context area is selected.
          type: array
          items:
            $ref: "#/components/schemas/StaticConfigArea"
        microfrontends:
          description: |
            A dictionary of microfrontends, each identified by its unique name.
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MicrofrontendSpec"

    StaticConfigArea:
      type: object
      description: |
        Specification of the static configuration for a context area, 
        identified by a specific name and path regex.
      required: [name]
      properties:
        name:
          type: string
          description: |
            Name of the context area.
        path:
          type: string
          description: |
            The regular expression used to match the path relative to the base href 
            where this context area should be applied. If no path is provided, the 
            context area specification applies to all paths. In the event of conflicts, 
            the first matching context area is used.
        contextArea: 
          $ref: "#/components/schemas/ContextArea"
          description: |
            Definition of context area elements. The `microfrontends` property of the context 
            area should be empty. However, if provided, it will override the definitions in the 
            `StaticConfig.microfrontends` properties.
    ElementSpec:
      type: object
      description: |
        Specification of the element.
        Elements serve as the building blocks of the application. 
        Each element should be a web component rendered by the browser. 
        When rendered in context, such as with the `polyfea-context` element, 
        the `context` attribute is set to the name of the context area.
      required: [tagName]
      properties:
        microfrontend:
          type: string
          description: |
            The name of the microfrontend to which the element belongs. The browser 
            loads the microfrontend before rendering the element. 
            If this property is not provided, it's assumed that the browser has already 
            loaded all necessary resources for the element prior to rendering.
        tagName:
          type: string
          description: |
            The name of the element, which corresponds to its tag name used in the document flow.
        attributes:
          type: object
          additionalProperties:
            type: string
          description: |
            Attributes to be assigned to the element during rendering.
        style:
          type: object
          additionalProperties:
            type: string
          description: |
            The styles of the element. Primarily intended as a fallback for specific cases, 
            such as setting CSS variables.

    MicrofrontendSpec:
      type: object
      description: |
        Specification of the microfrontend.
        Microfrontend resources are loaded by the browser as needed. 
        Each microfrontend comprises a set of resources that are loaded prior to, 
        or in parallel with, the rendering of microfrontend elements. 
        Additionally, a microfrontend can have dependencies on other microfrontends.

      properties:
        dependsOn:
          type: array
          items:
            type: string
          description: |
            The microfrontends that this microfrontend depends on. 
            The specification of these dependencies is provided in the context area information.
        module:
          type: string
          description:
            A shorthand for the microfrontend script module resource. 
            The browser loads this module before rendering the elements. 
            If the module has dependencies on other resources, it may load them itself, 
            provided their references are given as a relative path to the module.
        resources:
          type: array
          items:
            $ref: "#/components/schemas/MicrofrontendResource"
          description: |
            The resources that the browser should load. Only resources that need to be directly 
            loaded into the document's `head` element should be specified here. Typical examples 
            include fonts and stylesheets that must be globally available.

    MicrofrontendResource:
      type: object
      description: |
        The resource that the microfrontend requires. This resource could be a script, 
        stylesheet, or any other `link` element. The browser loads this resource when the 
        microfrontend is requested. The loading process can occur either synchronously or asynchronously.
      properties:
        kind:
          type: string
          enum: [script, stylesheet, link]
          description: |
            The type of the resource. This could be a script, stylesheet, or any other `link` element.
        href:
          type: string
          description: |
            The URL of the resource. This URL is usually relative to the application's base URL 
            and is typically served as a subpath 
            of `<base_href>/polyfea/webcomponent/<microfrontend-name>/<resource-path...>`.
        attributes:
          type: object
          additionalProperties:
            type: string
          description: |
            Additional attributes to be assigned to the `link` or `script` element, 
            alongside the `rel` and `href` attributes.
        waitOnLoad:
          type: boolean
          description: |
            If set to `true`, the browser will complete loading the resource before it finishes 
            loading the microfrontend. If set to `false`, the browser will load the resource 
            asynchronously, allowing for continued loading and rendering in the meantime.
  examples:
    context-area-toplevel-tiles:
      summary: |
        Example of a context area information for the top level application tiles.
      value:
        elements:
          - microfrontend: polyfea-md-shell
            tagName: polyfea-md-app
            attributes:
              headline: My sample application
              shortHeadline: sample
              supportingText: |
                This is a sample application to be shown in various contexts on the page navigation elements
              materialIcon: token
              tileImgSrc: /my-assets/sample-app-tile.svg
              href: ./sample-app
          - microfrontend: my-sample-fea
            tagName: my-dynamic-tile
            attributes:
              refreshInterval: 10000
              href: ./other-sample-app
        microfrontends:
          material-design:
            resources:
              - kind: stylesheet
                href: ./polyfea/webcomponent/material-design/theme.css
                waitOnLoad: false
              - kind: script
                href: ./polyfea/webcomponent/material-design/all.esm.js
                attributes:
                  type: module
                waitOnLoad: true
              - kind: link
                href: ./polyfea/webcomponent/material-design-elements/material-symbols.css
                attributes:
                  rel: stylesheet
                waitOnLoad: false
          polyfea-md-shell:
            dependsOn: [material-design]
            module: ./polyfea/webcomponent/polyfea-md-shell/polyfea-md-shell.esm.js
          my-sample-fea:
            dependsOn: [material-design]
            module: ./polyfea/webcomponent/my-sample-fea/my-sample-fea.esm.js
    static-config-simple-configuration:
      summary: |
        Example of a simple static configuration.
      value:
        contexts:
          - name: shell
            elements:
              - microfrontend: polyfea-md-shell
                tagName: polyfea-md-shell
                attributes:
                  headline: My sample application

          - name: main-content
            path: ^/$
            elements:
              - microfrontend: polyfea-md-shell
                tagName: polyfea-md-apps
                attributes:
                  applicationsContext: applications

          - name: main-content
            path: ^/sample-app
            elements:
              - microfrontend: my-sample-fea
                tagName: sample-data

          - name: applications
            elements:
              - microfrontend: polyfea-md-shell
                tagName: polyfea-md-app
                attributes:
                  headline: My sample application
                  shortHeadline: sample
                  supportingText: |
                    This is a sample application to be shown in various contexts on the page navigation elements
                  materialIcon: token
                  tileImgSrc: /my-assets/sample-app-tile.svg
                  href: ./sample-app
              - microfrontend: my-sample-fea
                tagName: my-dynamic-tile
                attributes:
                  refreshInterval: 10000
                  href: ./other-sample-app

        microfrontends:
          material-design:
            resources:
              - kind: stylesheet
                href: ./polyfea/webcomponent/material-design/theme.css
                waitOnLoad: false
              - kind: script
                href: ./polyfea/webcomponent/material-design/all.esm.js
                attributes:
                  type: module
                waitOnLoad: true
              - kind: link
                href: ./polyfea/webcomponent/material-design-elements/material-symbols.css
                attributes:
                  rel: stylesheet
                waitOnLoad: false
          polyfea-md-shell:
            dependsOn: [material-design]
            module: ./polyfea/webcomponent/polyfea-md-shell/polyfea-md-shell.esm.js
          my-sample-fea:
            dependsOn: [material-design]
            module: ./polyfea/webcomponent/my-sample-fea/my-sample-fea.esm.js
    element-spec-application-tile:
      summary: |
        Example of an application tile element specification.
      value:
        microfrontend: polyfea-md-shell
        tagName: polyfea-md-app
        attributes:
          headline: My sample application
          shortHeadline: sample
          supportingText: |
            This is a sample application to be shown in various contexts on the page navigation elements
          materialIcon: token
          tileImgSrc: /my-assets/sample-app-tile.svg
          href: ./sample-app
    element-spec-custom-element:
      summary: |
        Example of a custom element specification.
      value:
        microfrontend: my-sample-fea
        tagName: my-custom-element
        attributes:
          my-attribute: my-value
          my-other-attribute: my-other-value
        style:
          --my-custom-variable: my-custom-value
    microfrontend-spec-material-md-shell:
      summary: |
        Example of a material design shell microfrontend specification.
      value:
        dependsOn: [material-design]
        module: ./polyfea/webcomponent/polyfea-md-shell/polyfea-md-shell.esm.js
    microfrontend-spec-material-design-resources:
      summary: |
        Example of a microfrontend to load resources needed for material design web elements.
      value:
        resources:
          - kind: stylesheet
            href: ./polyfea/webcomponent/material-design/theme.css
            waitOnLoad: false
          - kind: script
            href: ./polyfea/webcomponent/material-design/all.esm.js
            attributes:
              type: module
            waitOnLoad: true
          - kind: link
            href: ./polyfea/webcomponent/material-design-elements/material-symbols.css
            attributes:
              rel: stylesheet
            waitOnLoad: false
    microfrontend-resource-theme-resource:
      summary: |
        Example of a stylesheet resource.
      value:
        kind: stylesheet
        href: ./polyfea/webcomponent/polyfea-md-shell/theme.css
        waitOnLoad: false
    microfrontend-resource-script-resource:
      summary: |
        Example of a script resource.
      value:
        kind: script
        href: ./polyfea/webcomponent/material-design-elements/all.esm.js
        attributes:
          type: module
        waitOnLoad: true
    microfrontend-resource-font-resource:
      summary: |
        Example of a font resource.
      value:
        kind: link
        href: ./polyfea/webcomponent/material-design-elements/material-icons.css
        attributes:
          rel: stylesheet
        waitOnLoad: false
