/*
 * Polyfea Browser application
 *
 * This is the OpenAPI definition for the Polyfea endpoint serving the context information to the browser client. The client is requesting context information from the backend typically  when approaching the `<polyfea-context>` element. The context information is then used to render the UI of the application.
 *
 * API version: v1alpha1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package polyfea

// ContextArea - Elements to be inserted into the microfrontend context area. The context area describes an area in the document flow which content is depending on the configuration of the system. For examples the context area `top-level-applicartion` may be used to render the top level application tiles.
type ContextArea struct {

	// The elements to be inserted into the context area. The elements are rendered in the order they are provided in the array.
	Elements []ElementSpec `json:"elements"`

	// The microfrontends referenced by any of the elements. Loading of microfrontend resources is triggered by the browser when the element is rendered.
	Microfrontends map[string]MicrofrontendSpec `json:"microfrontends,omitempty"`
}

// AssertContextAreaRequired checks if the required fields are not zero-ed
func AssertContextAreaRequired(obj ContextArea) error {
	elements := map[string]interface{}{
		"elements": obj.Elements,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Elements {
		if err := AssertElementSpecRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertContextAreaConstraints checks if the values respects the defined constraints
func AssertContextAreaConstraints(obj ContextArea) error {
	return nil
}
