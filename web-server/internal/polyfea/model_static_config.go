/*
 * Polyfea Browser application
 *
 * This is the OpenAPI definition for the Polyfea endpoint serving the context information to the browser client. The client is requesting context information from the backend typically  when approaching the `<polyfea-context>` element. The context information is then used to render the UI of the application.
 *
 * API version: v1alpha1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package polyfea

// StaticConfig - Specification of the static configuration of the application. The static configuration is a compilation of all contexts/paths and their elements,  usefull durring development, testing or for simpler applications.
type StaticConfig struct {

	// List of context areas and their elements. The context areas are referenced by the name and path regex at which they are rendered. In case of conflict, the first matching context area is used.
	ContextAreas []StaticConfigArea `json:"contextAreas,omitempty"`

	// Dictionary of microfrontends. The microfrontends are referenced by their name.
	Microfrontends map[string]MicrofrontendSpec `json:"microfrontends"`
}

// AssertStaticConfigRequired checks if the required fields are not zero-ed
func AssertStaticConfigRequired(obj StaticConfig) error {
	elements := map[string]interface{}{
		"microfrontends": obj.Microfrontends,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.ContextAreas {
		if err := AssertStaticConfigAreaRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertStaticConfigConstraints checks if the values respects the defined constraints
func AssertStaticConfigConstraints(obj StaticConfig) error {
	return nil
}
