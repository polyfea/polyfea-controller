/*
 * Polyfea Browser application
 *
 * This is the OpenAPI definition for the Polyfea endpoint serving the context information to the browser client. The client is requesting context information from the backend typically  when approaching the `<polyfea-context>` element. The context information is then used to render the UI of the application.
 *
 * API version: v1alpha1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package polyfea

// MicrofrontendResource - The resource required by the microfrontend. The resource is either a script, stylesheet, or any other `link` element. The resource is  loaded by the browser when the microfrontend is requested to be loaded. The resource may be loaded either synchronously or asynchronously.
type MicrofrontendResource struct {

	// The kind of the resource. The resource is either a script, stylesheet, or any other `link` element.
	Kind string `json:"kind,omitempty"`

	// The URL of the resource. The URL is typically relative to the base URL of the application and typically served as subpath of `<base_href>/polyfea/webcomponent/<microfrontend-name>/<resource-path...>`.
	Href string `json:"href,omitempty"`

	// The attributes to be put on the `link` or `script` element in addition to `rel` and `href` attributes.
	Attributes map[string]string `json:"attributes,omitempty"`

	// If `true` the browser will wait for the resource to be loaded before finishing loading of the microfrontend. If `false` the browser will load the resource asynchronously and continue with loading and rendering in  between.
	WaitOnLoad bool `json:"waitOnLoad,omitempty"`
}

// AssertMicrofrontendResourceRequired checks if the required fields are not zero-ed
func AssertMicrofrontendResourceRequired(obj MicrofrontendResource) error {
	return nil
}

// AssertMicrofrontendResourceConstraints checks if the values respects the defined constraints
func AssertMicrofrontendResourceConstraints(obj MicrofrontendResource) error {
	return nil
}
