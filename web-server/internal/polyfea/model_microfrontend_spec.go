/*
 * Polyfea Browser application
 *
 * This is the OpenAPI definition for the Polyfea endpoint serving the context information to the browser client. The client is requesting context information from the backend typically  when approaching the `<polyfea-context>` element. The context information is then used to render the UI of the application.
 *
 * API version: v1alpha1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package polyfea

// MicrofrontendSpec - Specification of the microfrontend Microfrontend resources are loaded by browser on demand. Each microfrontend consist of a set of resources to be loaded ahead of rendering or parallel to the rendering of microfrontend elements. In addition, the microfrontend can depend on other microfrontends.
type MicrofrontendSpec struct {

	// The microfrontend that this microfrontend is depending on. Specification of the dependendencies is provided in the context  area information.
	DependsOn []string `json:"dependsOn,omitempty"`

	// Shorthand for the microfrontend script module resource. The module is loaded by the browser before rendering of elements happens. In case the module has dependencies to other resources, they may be loaded by the module itself, assuming their references are provided as a relative path to the module.
	Module string `json:"module,omitempty"`

	// The resources to be loaded by the browser. Only resources that needs to be directly loaded in the  document `head` element needs to be specified here, typical examples are fonts, and stylesheets that  are required to be globally available.
	Resources []MicrofrontendResource `json:"resources,omitempty"`
}

// AssertMicrofrontendSpecRequired checks if the required fields are not zero-ed
func AssertMicrofrontendSpecRequired(obj MicrofrontendSpec) error {
	return nil
}

// AssertMicrofrontendSpecConstraints checks if the values respects the defined constraints
func AssertMicrofrontendSpecConstraints(obj MicrofrontendSpec) error {
	return nil
}
