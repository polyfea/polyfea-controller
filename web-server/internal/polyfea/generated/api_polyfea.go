// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Polyfea Browser application
 *
 * This is the OpenAPI definition for the Polyfea endpoint, which serves context information to the  browser client. The client typically requests this context information from the backend when it  encounters the `<polyfea-context>` element. This context information is then used to render the  application's UI.
 *
 * API version: v1alpha1
 */

package generated

import (
	_ "encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// PolyfeaAPIController binds http requests to an api service and writes the service results to the http response
type PolyfeaAPIController struct {
	service      PolyfeaAPIServicer
	errorHandler ErrorHandler
}

// PolyfeaAPIOption for how the controller is set up.
type PolyfeaAPIOption func(*PolyfeaAPIController)

// WithPolyfeaAPIErrorHandler inject ErrorHandler into controller
func WithPolyfeaAPIErrorHandler(h ErrorHandler) PolyfeaAPIOption {
	return func(c *PolyfeaAPIController) {
		c.errorHandler = h
	}
}

// NewPolyfeaAPIController creates a default api controller
func NewPolyfeaAPIController(s PolyfeaAPIServicer, opts ...PolyfeaAPIOption) Router {
	controller := &PolyfeaAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the PolyfeaAPIController
func (c *PolyfeaAPIController) Routes() Routes {
	return Routes{
		"GetContextArea": Route{
			strings.ToUpper("Get"),
			"/polyfea/context-area/{name}",
			c.GetContextArea,
		},
		"GetStaticConfig": Route{
			strings.ToUpper("Get"),
			"/polyfea/static-config",
			c.GetStaticConfig,
		},
	}
}

// GetContextArea - Get the context area information.
func (c *PolyfeaAPIController) GetContextArea(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	query := r.URL.Query()
	nameParam := params["name"]
	pathParam := query.Get("path")
	takeParam, err := parseNumericParameter[int32](
		query.Get("take"),
		WithParse[int32](parseInt32),
	)
	if err != nil {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	result, err := c.service.GetContextArea(r.Context(), nameParam, pathParam, takeParam, r.Header)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, result.Headers, w)
}

// GetStaticConfig - Get the static information about all resources and context areas.
func (c *PolyfeaAPIController) GetStaticConfig(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetStaticConfig(r.Context(), r.Header)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, result.Headers, w)
}
