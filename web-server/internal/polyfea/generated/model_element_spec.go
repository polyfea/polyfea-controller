// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Polyfea Browser application
 *
 * This is the OpenAPI definition for the Polyfea endpoint, which serves context information to the  browser client. The client typically requests this context information from the backend when it  encounters the `<polyfea-context>` element. This context information is then used to render the  application's UI.
 *
 * API version: v1alpha1
 */

package generated

// ElementSpec - Specification of the element. Elements serve as the building blocks of the application.  Each element should be a web component rendered by the browser.  When rendered in context, such as with the `polyfea-context` element,  the `context` attribute is set to the name of the context area.
type ElementSpec struct {

	// The name of the microfrontend to which the element belongs. The browser  loads the microfrontend before rendering the element.  If this property is not provided, it's assumed that the browser has already  loaded all necessary resources for the element prior to rendering.
	Microfrontend string `json:"microfrontend,omitempty"`

	// The name of the element, which corresponds to its tag name used in the document flow.
	TagName string `json:"tagName"`

	// Attributes to be assigned to the element during rendering.
	Attributes map[string]string `json:"attributes,omitempty"`

	// The styles of the element. Primarily intended as a fallback for specific cases,  such as setting CSS variables.
	Style map[string]string `json:"style,omitempty"`
}

// AssertElementSpecRequired checks if the required fields are not zero-ed
func AssertElementSpecRequired(obj ElementSpec) error {
	elements := map[string]interface{}{
		"tagName": obj.TagName,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertElementSpecConstraints checks if the values respects the defined constraints
func AssertElementSpecConstraints(obj ElementSpec) error {
	return nil
}
